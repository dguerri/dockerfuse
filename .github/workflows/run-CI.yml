name: "CI"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

permissions:
  contents: read
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        go: ["1.18.x", "1.19.x"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Go
        uses: WillAbides/setup-go-faster@v1.7.0
        with:
          go-version: ${{ matrix.go }}
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Static code analysis
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.1"
          install-go: false
          cache-key: ${{ matrix.go }}
      - name: Run Go vet
        run: "go vet ./..."
      - name: Make all
        run: "make all"
      - name: Unit tests
        run: "go test ./..."

  coverage:
    runs-on: "ubuntu-latest"
    steps:
      - name: Setup Go
        uses: WillAbides/setup-go-faster@v1.7.0
        with:
          go-version: "1.19.x"
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Unit tests with coverage
        run: "go test ./... -cover -coverprofile=coverage.out"
      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.0
        with:
          infile: coverage.out
          outfile: coverage.lcov
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov
